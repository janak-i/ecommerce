c
@cart_product.quantity += 1
@cart_product = @current_cart.cart_products.find_by(product_id: chosen_product)
@current_cart.products.include?(chosen_product)
c
@cart_product.save
chosen_product = Product.find(params[:product_id])
chosen_product
Product.find(params[:product_id])
c
@cart_product = CartProduct.find(params[:product_id])
c
@current_user ||= User.find_by(id: params["id"])
c
@cart_product = CartProduct.find(params[:product_id])
c
@current_user ||= User.find_by(id: params["id"])
c
current_user.errors.full_messages
 User.find_by(id: params["id"])
@current_user ||= User.find_by(id: params["id"])
c
@current_user ||= User.find_by(id: params["id"])
c
@current_cart = Cart.find(params[:cart_id])
c
@current_user ||= User.find_by(id: params["id"])
c
@current_cart = Cart.find(params[:cart_id])
c
@current_user ||= User.find_by(id: params["id"])
c
@current_cart = Cart.find(params[:cart_id])
Cart.find(params[:cart_id])
c
@current_user ||= User.find_by(id: params["id"])
 User.find_by(id: params["id"])
c
@current_cart
 @cart = @current_cart
c
@cart = @current_cart
c
@product=Product.find(params[:product_id])
c
 product.quantity + 1
product.quantity + 1
product
product = products.where('product_id = ?', product_id)
c
 product = products.where('product_id = ?', product_id)
c
 @product=Product.find(params[:product_id])
c
 @product=Product.find(params[:id])
 @product=Product.find(params[:id]).errors.full_messages
 @product=Product.find(params[:id]).errors
 @product=Product.find(params[:id])
Product.find(params[:id])
c
@product=Product.find(params[:id])
@product=Product.find(params[:id]
c
@current_user ||= User.find_by(id: params["id"])
c
@product=Product.find(params[:id])
c
@current_user ||= User.find_by(id: params["id"])
c
v
c
role == "admin"
if role == "admin"
c
@product=Product.find(params[:id])
c
@current_user ||= User.find_by(id: params["id"])
c
user
user = user_data
user_data = decode_data[0]["user_data"] unless !decode_data
decode_data = decode_user_data(request.headers["token"])
c
@current_user ||= User.find_by(id: params["id"])
c
user = user_data
user_data = decode_data[0]["user_data"] unless !decode_data
decode_data = decode_user_data(request.headers["token"])
c
@current_user ||= User.find_by(id: params["id"])
c
@current_user ||= User.find_by(id: params["id"])
c
@product.present?
@product=Product.find(params[:product_id])
c
@product=Product.find(params[:product_id])
c
@order = current_user.orders.new(order_params)
c
@order.save
@order = current_user.orders.new(order_params)
c
token = encode_user_data({ user_data: user.id })
UserMailer.new_user_email(@user).deliver_later
user.save
user = User.new(email: params[:email], password_digest: params[:password_digest], user_role: params[:user_role])
c
token = encode_user_data({ user_data: user.id })
UserMailer.with(user: @user).new_user_email.deliver_later
user.save
user = User.new(email: params[:email], password_digest: params[:password_digest], user_role: params[:user_role])
c
token = encode_user_data({ user_data: user.id })
UserMailer.with(user: @user).welcome_email.deliver_later
user.save
user = User.new(email: params[:email], password_digest: params[:password_digest], user_role: params[:user_role])
c
cc
c
user.update(password_digest: params['data'][:new_password])
(params['data'][:confirm_password])
params['data'][:new_password]
(params['data'][:new_password])
params['data'][:old_password]
user = User.find(params['data'][:id])
c
(params['data'][:new_password])
params['data'][:old_password]
user = User.find(params['data'][:id])
c
user.update(password_digest: params['data'][:new_password])
(params['data'][:confirm_password])
params['data'][:new_password]
params['data'][:new_password
user = User.find(params['data'][:id])
c
user = User.find(params['data'][:id], password_digest: params[:password_digest])
password_digest: params([:password_digest])user = User.find(params['data'][:id], password_digest: params[:password_digest])
password_digest: params([:password_digest])
password_digest: params[:password_digest])
User.find(params['data'][:id])
c
User.find(params['data'][:id], params['old_password'][:old_password])
User.find(params['data'][:id]
c
user.update(password_digest: params['data'][:new_password])
(params['data'][:confirm_password])
params['data'][:new_password]
user = User.find(params['data'][:id])
c
user = User.find(params[:id])
c
(params['data'][:confirm_password])
params['data'][:new_password]
c
params['data'][:new_password] == (params['data'][:confirm_password]).errors.full_messages
params['data'][:new_password] == (params['data'][:confirm_password])
params['data'][:new_password]
user = User.find(params[:id])
c
!params[:password].present?
c
!params[:password].present?
c
!params[:password].present?
if !params[:password].present?
c
token = encode_user_data({ user_data: user.id })
user.save
user = User.new(email: params[:email], password_digest: params[:password_digest], user_role: params[:user_role])
c
@orders = current_user.orders.all
current_user
c
current_user
c
@order.save
@order = current_user.orders.new(order_params)
c
@order.save
@order = current_user.orders.new(order_params)
current_user.orders.new
c
@current_user ||= User.find_by(id: params["id"])
c
@order.errors.full_messages
@order.save
 @order = current_user.orders.new(order_params)
orders.new(order_params)
current_user
c
@current_user ||= User.find_by(id: params["id"])
c
 @order = Order.new(order_params)
c
@current_user ||= User.find_by(id: params["id"])
c
@current_user ||= User.find_by(id: params["id"])
c
@products = Product.find_name
c
@current_user ||= User.find_by(id: params["id"])
c
@current_user ||= User.find_by(id: params["id"])
c
@product.save
@product = Product.new(product_params)
c
user_role=="admin"
c
user_role
user_role == ‘admin’
c
user.role == ‘admin’
c
@current_user ||= User.find_by(id: params["id"])
c
User.find_by(id: params["id"])
c
@products=Product.all
c
@products=Product.all
c
@current_user ||= User.find_by(id: params["id"])
@current_user ||= User.find_by(id: params["id"]
c
@current_user ||= User.find_by(id: params["id"])
@current_user
User.find_by(id: params["id"])
c
User.find_by(id: params["id"])
c
User.find_by(id: params["id"])
@current_user ||= User.find_by(id: params["id"])
c
@current_user ||= User.find_by(id: params["id"])
c
user.errors.full_messages
user.errors
user && user.password_digest == params[:password_digest]
user = User.find_by(email: params[:email])
c
a.errors.full_messages
a
a=user && user.password_digest == params[:password_digest]
user && user.password_digest == params[:password_digest]
user = User.find_by(email: params[:email])
c
user = user_data
user_data = decode_data[0]["user_data"] unless !decode_data
decode_data[0]
decode_data = decode_user_data(request.headers["token"])
c
 user.save
user = User.new(email: params[:email], password_digest: params[:password_digest], user_role: params[:user_role])
